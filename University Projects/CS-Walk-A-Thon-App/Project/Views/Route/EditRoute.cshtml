@model Project.Models.Route

@{
	ViewBag.Title = "EditRoute";

}

<h2>EditRoute</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Route</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.routeID)

		<div class="form-group">
			@Html.LabelFor(model => model.routeName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.routeName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.routeName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.routeStart, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.routeStart, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.routeStart, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.routeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.routeEnd, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.routeEnd, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.distanceCovered, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.distanceCovered, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.distanceCovered, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.achievementID, "achievementID", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("achievementID", ViewBag.Achievements as SelectList, "--Select Achievement--", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.achievementID, "", new { @class = "text-danger" })
			</div>
		</div>



		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "ManageRoute")
</div>


