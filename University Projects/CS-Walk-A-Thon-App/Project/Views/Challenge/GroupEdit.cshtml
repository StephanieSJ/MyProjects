@model Project.Models.GroupChallenge
@{
    ViewBag.Title = "GroupEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Edit Group Challenge</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.groupChallengeID)
        <div class="form-group">
            @Html.Label("Challenge", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Distance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeDistance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeDistance, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Starting Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeTimeStart, new { htmlAttributes = new { @class = "form-control", placeholder = "yyyy/mm/dd" } })
                @Html.ValidationMessageFor(model => model.groupChallengeTimeStart, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ending Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeTimeEnd, new { htmlAttributes = new { @class = "form-control", placeholder = "yyyy/mm/dd" } })
                @Html.ValidationMessageFor(model => model.groupChallengeTimeEnd, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.groupChallengeGender, new SelectList(ViewBag.GenderList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupChallengeGender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Lowest age limit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeAgeLowerBound, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeAgeLowerBound, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Highest age limit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeAgeUpperBound, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeAgeUpperBound, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Year in course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeDegreeYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeDegreeYear, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Course Faculty", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeDegreeFaculty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeDegreeFaculty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("User type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.groupChallengeUserType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.groupChallengeUserType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Achievement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("achievementID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.achievementID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "ManageGroupChallenge")
</div>
@section scripts{
    <script type="text/javascript">//...
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy', //choose the date format you prefer
            language: "en-ZA",
            orientation: 'left bottom'
        });</script>
}