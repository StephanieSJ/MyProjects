@model Project.Models.Achievement

@{
    /**/

    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Achievement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.achievementName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.achievementName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.achievementName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.achievementDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.achievementDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.achievementDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.achievementDifficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.achievementDifficulty, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.achievementDifficulty, new SelectList(ViewBag.DifficultyList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.achievementDifficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.achievementCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.achievementCategory, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.achievementCategory, new SelectList(ViewBag.CategoryList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.achievementCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("Manage", "Achievement")" class="btn btn-default">
        Return to manage achievements
        @*<span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>*@
    </a>
</div>

@*@section scripts{
    @if (ViewBag.CreateMessage != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.CreateMessage');
            };
        </script>
    }
}*@