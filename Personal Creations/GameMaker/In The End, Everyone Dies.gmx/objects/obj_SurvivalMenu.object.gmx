<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>XX = 0;
YY = 0;
global.DragHover = false;
Grab = false;

global.BackHover = false;
global.WeaponHover = false;
global.HealHover = false;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.MenuCreated == 'Electronics')
{
    instance_create(0, 0, obj_ScrollingMenuController);
    with (obj_ScrollingMenuController)
    {
        Options = obj_Electronics.Electronics;
        TotalOptions = obj_Electronics.NumberElectronics;
        LeftOffset = 150;
        Width = 200;
        FullHeight = 250;
    }
}
else if (global.MenuCreated == 'Survivors')
{
    instance_create(0, 0, obj_ScrollingMenuController);
    with (obj_ScrollingMenuController)
    {
        Options = global.SurvivorInstances;
        TotalOptions = global.Survivors;
        LeftOffset = 0;
        Width = 200;
        FullHeight = 250;
    }
}
else if (global.MenuCreated == 'Jobs')
{
    instance_create(0, 0, obj_ScrollingMenuController);
    with (obj_ScrollingMenuController)
    {
        Options = obj_JobManager.Jobs;
        TotalOptions = obj_JobManager.Count;
        LeftOffset = 440;
        Width = 200;
        FullHeight = 250;
    }
}
else if (global.MenuCreated == 'Scavenge')
{
    instance_create(0, 0, obj_ScrollingMenuController);
    with (obj_ScrollingMenuController)
    {
        Options = obj_TownGrid.TownLocations;
        TotalOptions = 7;
        LeftOffset = 425;
        Width = 200;
        FullHeight = 250;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.MenuCreated == 'Survivor')
{
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 275, global.SurvivalMenuY - 420, global.SurvivalMenuX - 225, global.SurvivalMenuY - 370))
    {
        global.BackHover = true;
    }
    else
    {
        global.BackHover = false;
    }
    
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 275, global.SurvivalMenuY - 440, global.SurvivalMenuX + 275, global.SurvivalMenuY - 370))
    {
        global.DragHover = true;
    }
    else
    {
        global.DragHover = false;
    }
    
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 300, global.SurvivalMenuY - 100, global.SurvivalMenuX - 100, global.SurvivalMenuY + 100))
    {
        global.WeaponHover = true;
    }
    else
    {
        global.WeaponHover = false;
    }
    
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 225, global.SurvivalMenuY - 420, global.SurvivalMenuX - 175, global.SurvivalMenuY - 370))
    {
        global.HealHover = true;
    }
    else
    {
        global.HealHover = false;
    }
}
else if (global.MenuCreated == 'Survivors')
{
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 275, global.SurvivalMenuY - 440, global.SurvivalMenuX + 275, global.SurvivalMenuY - 370))
    {
        global.DragHover = true;
    }
    else
    {
        global.DragHover = false;
    }   
}
else if (global.MenuCreated == 'Electronics')
{
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 375, global.SurvivalMenuY - 440, global.SurvivalMenuX + 375, global.SurvivalMenuY - 370))
    {
        global.DragHover = true;
    }
    else
    {
        global.DragHover = false;
    }
}
else if (global.MenuCreated == 'Jobs')
{
    if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), global.SurvivalMenuX - 675, global.SurvivalMenuY - 440, global.SurvivalMenuX + 675, global.SurvivalMenuY - 370))
    {
        global.DragHover = true;
    }
    else
    {
        global.DragHover = false;
    }
}

if !(mouse_check_button(mb_left))
{
    Grab = false;
}

if !(Grab)
{
    exit;
}
else
{
    if ((device_mouse_y_to_gui(0) + YY) &lt; 440)
    {
        global.SurvivalMenuY = 440;
    }
    else if ((device_mouse_y_to_gui(0) + YY) &gt; 1080)
    {
        global.SurvivalMenuY = 1080;
    }
    else
    {
        global.SurvivalMenuY = device_mouse_y_to_gui(0) + YY;
    }
    
    if ((device_mouse_x_to_gui(0) + XX) &lt; 0)
    {
        global.SurvivalMenuX = 0;
    }
    else if ((device_mouse_x_to_gui(0) + XX) &gt; 1920)
    {
        global.SurvivalMenuX = 1920;
    }
    else
    {
        global.SurvivalMenuX = device_mouse_x_to_gui(0) + XX;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Grab = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.DragHover)
{
    Grab = true;
    YY = global.SurvivalMenuY - device_mouse_y_to_gui(0);
    XX = global.SurvivalMenuX - device_mouse_x_to_gui(0);
}
else if (global.WeaponHover) and (global.SurvivorSelected.State != scr_Scavenge)
{
    instance_create(0, 0, obj_ScrollingMenuController);
    with (obj_ScrollingMenuController)
    {
        Options = obj_Weapons.WeaponList;
        TotalOptions = obj_Weapons.TotalWeapons;
        LeftOffset = -200;
        Width = 200;
        FullHeight = 250;
    }
}
else if (global.HealHover) and (global.SurvivorSelected.State != scr_Scavenge)
{
    with (global.SurvivorSelected)
    {
        if (State == scr_Healing)
        {
            scr_GoBackToAssignedState();
        }
        else
        {
            if (Health &lt; 100) and (State != scr_Sleeping)
            {
                State = scr_Healing;
                HealingStation = noone;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.MenuCreated == 'Survivor')
{
    draw_sprite(spr_Paper, 0, global.SurvivalMenuX, global.SurvivalMenuY);
    
    if (global.BackHover)
    {
        draw_set_colour(c_gray);
    }
    else
    {
        draw_set_colour(c_black);
    }
    draw_rectangle(global.SurvivalMenuX - 275, global.SurvivalMenuY - 420, global.SurvivalMenuX - 225, global.SurvivalMenuY - 370, false);
    
    if (global.HealHover) and (global.SurvivorSelected.State != scr_Scavenge)
    {
        draw_set_colour(c_gray);
    }
    else
    {
        draw_set_colour(c_black);
    }
    draw_rectangle(global.SurvivalMenuX - 225, global.SurvivalMenuY - 420, global.SurvivalMenuX - 175, global.SurvivalMenuY - 370, false);
    
    if (global.WeaponHover) and (global.SurvivorSelected.State != scr_Scavenge)
    {
        draw_set_colour(c_gray);
    }
    else
    {
        draw_set_colour(c_black);
    }
    draw_rectangle(global.SurvivalMenuX - 300, global.SurvivalMenuY - 100, global.SurvivalMenuX - 100, global.SurvivalMenuY + 100, true);
    draw_set_halign(fa_center);
    draw_text(global.SurvivalMenuX - 200, global.SurvivalMenuY, global.SurvivorSelected.Weapon);
}
else if (global.MenuCreated == 'Survivors')
{
    draw_sprite(spr_Paper, 0, global.SurvivalMenuX, global.SurvivalMenuY);
    
    draw_set_font(global.Font);
    draw_set_halign(fa_center);
    draw_text_transformed(global.SurvivalMenuX, global.SurvivalMenuY - 410, 'SURVIVORS', 2, 2, 0);
}
else if (global.MenuCreated == 'Electronics')
{
    draw_sprite(spr_ExtendedPaper, 0, global.SurvivalMenuX, global.SurvivalMenuY);
    
    draw_set_font(global.Font);
    draw_set_halign(fa_center);
    draw_text_transformed(global.SurvivalMenuX, global.SurvivalMenuY - 410, 'ELECTRONICS', 2, 2, 0);
}
else if (global.MenuCreated == 'Jobs')
{
    draw_sprite(spr_ExtraLongPaper, 0, global.SurvivalMenuX, global.SurvivalMenuY);
    
    draw_set_font(global.Font);
    draw_set_halign(fa_center);
    draw_text_transformed(global.SurvivalMenuX, global.SurvivalMenuY - 410, 'JOBS', 2, 2, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
