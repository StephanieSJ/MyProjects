<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ReferenceWidth = view_wview;
ReferenceHeight = view_hview;
ZoomSpeed = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_right) or keyboard_check(ord('D'))) and !(global.Building)
{
    view_xview += 5;
}

if (keyboard_check(vk_left) or keyboard_check(ord('A'))) and !(global.Building)
{
    view_xview -= 5;
}

if (keyboard_check(vk_up) or keyboard_check(ord('W'))) and !(global.Building)
{
    view_yview -= 5;
}

if (keyboard_check(vk_down) or keyboard_check(ord('S'))) and !(global.Building)
{
    view_yview += 5;
}

if (mouse_wheel_up()) and ((view_wview &gt; 512) and (view_hview &gt; 288))
{
    PreviousX = view_wview;
    PreviousY = view_hview;
    view_hview -= ReferenceHeight / ZoomSpeed;
    view_wview -= ReferenceWidth / ZoomSpeed;
    view_xview += abs(view_wview - PreviousX) / 2;
    view_yview += abs(view_hview - PreviousY) / 2;
}

if (mouse_wheel_down()) and ((view_wview &lt; ReferenceWidth) or (view_hview &lt; ReferenceHeight))
{
    PreviousX = view_wview;
    PreviousY = view_hview;
    view_hview += ReferenceHeight / ZoomSpeed;
    view_wview += ReferenceWidth / ZoomSpeed;
    view_xview -= abs(view_wview - PreviousX) / 2;
    view_yview -= abs(view_hview - PreviousY) / 2;
}

if (view_xview &lt; 0)
{
    view_xview = 0;
}
if (view_xview + view_wview &gt; ReferenceWidth)
{
    view_xview = ReferenceWidth - view_wview;
}

if (view_yview &lt; 0)
{
    view_yview = 0;
}
if (view_yview + view_hview &gt; ReferenceHeight)
{
    view_yview  = ReferenceHeight - view_hview;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
