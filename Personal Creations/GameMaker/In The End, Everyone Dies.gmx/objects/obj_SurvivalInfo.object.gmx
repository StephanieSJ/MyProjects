<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ValidPlot = 0;
HoverStart = false;
HoverQuit = false;
instance_create(960, 700, obj_NumberSurvivors);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 790, 801, 1130, 889))
{
    HoverStart = true;
}
else
{
    HoverStart = false;
}

if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 1443, 293, 1507, 357))
{
    HoverQuit = true;
}
else
{
    HoverQuit = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (HoverStart) and (ValidPlot == 3) and (global.Survivors &gt; 0) and (global.Survivors &lt;= 10)
{
    scr_DestroyBuildStuff();
    scr_CreateSurviveStuff();
    with (obj_Music)
    {
        audio_stop_sound(Song);
    }
    instance_create(0, 0, obj_Score);
    with (obj_NumberSurvivors)
    {
        instance_destroy();
    }
    with (obj_SurvivorSlider)
    {
        instance_destroy();
    }
    instance_destroy();
}
else if (HoverQuit)
{
    global.SurviveMenu = false;
    with (obj_NumberSurvivors)
    {
        instance_destroy();
    }
    with (obj_SurvivorSlider)
    {
        instance_destroy();
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_PlotInfo, 0, 960, 540, 2, 2, 0, c_white, 1);

draw_set_font(global.Font);
draw_set_halign(fa_center);

draw_text(700, 330, 'RESOURCE CONVERSIONS');
scr_DrawRectangle(500, 400, 900, 670, 1);
draw_set_colour(c_black);
draw_line(500, 356, 500, 656);
for (var i = 0; i &lt; 4; i++)
{
    switch (i)
    {
        case 0:
        {
            var ResourceSprite = spr_Wood;
            XPos = 455;
            YPos = 356 + (i * 75) + 35;
            var ResourceAmount = scr_GetResourceText(obj_Resources.Wood);
            break;
        }
        case 1:
        {
            var ResourceSprite = spr_MiningMaterial;
            XPos = 455;
            YPos = 356 + (i * 75) + 31;
            var ResourceAmount = scr_GetResourceText(obj_Resources.Stone);
            break;
        }
        case 2:
        {
            var ResourceSprite = spr_Shops;
            XPos = 455;
            YPos = 356 + (i * 75) + 40;
            var ResourceAmount = scr_GetResourceText(obj_Resources.Shops);
            break;
        }
        case 3:
        {
            var ResourceSprite = spr_Guns;
            XPos = 455;
            YPos = 356 + (i * 75) + 37;
            var ResourceAmount = scr_GetResourceText(obj_Resources.Guns);
            break;
        }
    }
    draw_sprite_ext(ResourceSprite, 0, XPos, YPos, 2, 2, 0, c_white, 1);
    draw_set_halign(fa_left);
    draw_set_font(global.SmallFont);
    draw_text_transformed(530, 356 + (i * 75) + 38, ResourceAmount, 2, 2, 0);
    draw_rectangle(412, 356 + (i * 75), 650, 356 + ((i + 1) * 75), true);
}

draw_line(655, 469, 745, 469);
draw_line(655, 394, 700, 394);
draw_line(655, 544, 700, 544);
draw_line(700, 394, 700, 544);
draw_triangle(745, 469, 730, 454, 730, 484, false);

draw_line(838, 431, 838, 506);
draw_sprite_ext(spr_BuildingMaterial, 0, 794, 468, 2, 2, 0, c_white, 1);
obj_Resources.BuildingMaterial = round(0.3 * obj_Resources.Wood) + round(0.3 * obj_Resources.Stone) + round(0.3 * obj_Resources.Shops)
draw_text_transformed(868, 469, scr_GetResourceText(obj_Resources.BuildingMaterial), 2, 2, 0);
draw_rectangle(750, 431, 986, 506, true);

draw_line(655, 619, 745, 619);
draw_triangle(745, 619, 730, 604, 730, 634, false); 

draw_line(838, 581, 838, 656);
draw_sprite_ext(spr_Ammo, 0, 794, 618, 2, 2, 0, c_white, 1);
draw_text_transformed(868, 619, scr_GetResourceText(obj_Resources.Guns), 2, 2, 0);
draw_rectangle(750, 581, 986, 656, true);

draw_set_font(global.Font);
draw_set_halign(fa_center);
draw_text_transformed(960, 230, 'START SURVIVING', 2, 2, 0);

draw_text(1325, 425, 'PREREQUISITES');
scr_DrawRectangle(1200, 495, 1450, 670, 1);
draw_set_font(global.SmallFont);
draw_set_halign(fa_right);
draw_text_transformed(1450, 525, 'ARE ALL FLOORS#SURROUNDED BY WALLS?', 2, 2, 0);
draw_text_transformed(1450, 590, 'DO ALL ROOMS#HAVE AN ENTRANCE?', 2, 2, 0);
if (ValidPlot == 0)
{
    draw_sprite(spr_ToggleFullscreen, 0, 1495, 525);
    draw_sprite(spr_ToggleFullscreen, 0, 1495, 590);
}
else if (ValidPlot == 1)
{
    draw_sprite(spr_ToggleFullscreen, 1, 1495, 525);
    draw_sprite(spr_ToggleFullscreen, 0, 1495, 590);
}
else if (ValidPlot == 2)
{
    draw_sprite(spr_ToggleFullscreen, 0, 1495, 525);
    draw_sprite(spr_ToggleFullscreen, 1, 1495, 590);
}
else if (ValidPlot == 3)
{
    draw_sprite(spr_ToggleFullscreen, 1, 1495, 525);
    draw_sprite(spr_ToggleFullscreen, 1, 1495, 590);
}

if (HoverQuit)
{
    draw_sprite_ext(spr_ClosePlotInfo, 1, 1475, 325, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_ClosePlotInfo, 0, 1475, 325, 2, 2, 0, c_white, 1);
}

if (HoverStart)
{
    draw_sprite_ext(spr_StartGame, 0, 960, 845, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_StartGame, 1, 960, 845, 2, 2, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
