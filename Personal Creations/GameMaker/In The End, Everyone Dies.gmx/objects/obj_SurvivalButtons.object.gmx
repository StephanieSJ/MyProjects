<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RepairHover = false;
ScavengeHover = false;
JobsHover = false;
ManagePeopleHover = false;
ManageElectronicsHover = false;
global.SurvivalMenuX = 960;
global.SurvivalMenuY = 540;
global.GuiHover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (RepairHover)
{
    scr_DestroySurvivalMenu();
    if (global.MenuCreated != 'Repair')
    {
        global.MenuCreated = 'Repair';
    }
    else
    {
        global.MenuCreated = '';
    }
}
else if (ScavengeHover)
{
    scr_DestroySurvivalMenu();
    if (global.MenuCreated != 'Scavenge')
    {
        global.MenuCreated = 'Scavenge';
        SurvivalMenu = instance_create(0, 0, obj_SurvivalMenu);
    }
    else
    {
        global.MenuCreated = '';
    }
}
else if (JobsHover)
{
    scr_DestroySurvivalMenu();
    if (global.MenuCreated != 'Jobs')
    {
        global.MenuCreated = 'Jobs';
        SurvivalMenu = instance_create(0, 0, obj_SurvivalMenu);
    }
    else
    {
        global.MenuCreated = '';
    }
}
else if (ManagePeopleHover)
{
    scr_DestroySurvivalMenu();
    if (global.MenuCreated != 'Survivors')
    {
        global.MenuCreated = 'Survivors';
        SurvivalMenu = instance_create(0, 0, obj_SurvivalMenu);
    }
    else
    {
        global.MenuCreated = '';
    }
}
else if (ManageElectronicsHover)
{
    scr_DestroySurvivalMenu();
    if (global.MenuCreated != 'Electronics')
    {
        global.MenuCreated = 'Electronics';
        SurvivalMenu = instance_create(0, 0, obj_SurvivalMenu);
    }
    else
    {
        global.MenuCreated = '';
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RepairHover = false;
ScavengeHover = false;
JobsHover = false;
ManagePeopleHover = false;
ManageElectronicsHover = false;

if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 50, 980, 114, 1044))
{
    RepairHover = true;
    global.GuiHover = true;
}
else if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 250, 980, 314, 1044))
{
    ScavengeHover = true;
    global.GuiHover = true;
}
else if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 450, 980, 514, 1044))
{
    JobsHover = true;
    global.GuiHover = true;
}
else if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 650, 980, 714, 1044))
{
    ManagePeopleHover = true;
    global.GuiHover = true;
}
else if (point_in_rectangle(device_mouse_x_to_gui(0), device_mouse_y_to_gui(0), 850, 980, 914, 1044))
{
    ManageElectronicsHover = true;
    global.GuiHover = true;
}
else
{
    global.GuiHover = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (RepairHover) or (global.MenuCreated == 'Repair')
{
    draw_sprite_ext(spr_BuildWalls, 1, 82, 1012, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_BuildWalls, 0, 82, 1012, 2, 2, 0, c_white, 1);
}

if (ScavengeHover)
{
    draw_sprite_ext(spr_Scavenge, 1, 282, 1012, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_Scavenge, 0, 282, 1012, 2, 2, 0, c_white, 1);
}

if (JobsHover)
{
    draw_sprite_ext(spr_Jobs, 1, 482, 1012, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_Jobs, 0, 482, 1012, 2, 2, 0, c_white, 1);
}

if (ManagePeopleHover)
{
    draw_sprite_ext(spr_ManagePeople, 1, 682, 1012, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_ManagePeople, 0, 682, 1012, 2, 2, 0, c_white, 1);
}

if (ManageElectronicsHover)
{
    draw_sprite_ext(spr_BuildElectronics, 1, 882, 1012, 2, 2, 0, c_white, 1);
}
else
{
    draw_sprite_ext(spr_BuildElectronics, 0, 882, 1012, 2, 2, 0, c_white, 1);
}

draw_set_halign(fa_center);
draw_set_font(global.Font);
draw_set_colour(c_black);
draw_text(82, 1060, 'REPAIR');
draw_text(282, 1060, 'SCAVENGE');
draw_text(482, 1060, 'JOBS');
draw_text(682, 1060, 'SURVIVORS');
draw_text(882, 1060, 'ELECTRONICS');
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
