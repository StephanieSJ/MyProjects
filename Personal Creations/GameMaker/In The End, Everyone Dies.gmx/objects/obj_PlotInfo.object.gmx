<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PlotInfo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ImageIndex = 0;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ImageIndex == 12)
{
    ImageIndex = 0;
}
else
{
    ImageIndex++;
}
alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create((x + (sprite_width / 2) - 85), (y - (sprite_height / 2) + 90), obj_ClosePlotInfo);
instance_create((x + 7), (y - 75), obj_InfoPanel);
if (PlotInfo == 'empty')
{
    instance_create((x + 139), (y - (sprite_height / 2) + 90), obj_ChoosePlot);
}
alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(global.Font);
draw_set_halign(fa_center);
draw_set_colour(c_black);
switch (PlotInfo)
{
    case 'shop':
    {
        draw_sprite_ext(spr_ShopsIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'SHOPPING CENTER');
        break;
    }
    
    case 'power':
    {
        draw_sprite_ext(spr_PowerIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'POWER STATION');
        break;
    }
    
    case 'guns':
    {
        draw_sprite_ext(spr_GunsIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'GUN SHOP');
        break;
    }
    
    case 'farm':
    {
        draw_sprite_ext(spr_FarmIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'FARM');
        break;
    }
    
    case 'mine':
    {
        draw_sprite_ext(spr_MineIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'MINE');
        break;
    }
    
    case 'woods':
    {
        draw_sprite_ext(spr_WoodsIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'FOREST');
        break;
    }
    
    case 'hospital':
    {
        draw_sprite_ext(spr_HospitalIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'HOSPITAL');
        break;
    }
    
    case 'empty':
    {   
        draw_sprite_ext(spr_EmptyPlotIdle, ImageIndex, (x - (sprite_width / 2) + 40), y + 55, 6, 6, 0, c_white, 1);
        draw_text(x, (y + (sprite_height / 2) - 45), 'EMPTY PLOT');
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
